/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The resource whose properties describes the North-south hardening settings
 * for some Azure resource
 *
 * @extends models['Resource']
 */
class NorthSouthHardenings extends models['Resource'] {
  /**
   * Create a NorthSouthHardenings.
   * @property {array} [trafficHardeningRules] The set of North-south traffic
   * hardening rules
   * @property {array} [trafficAlerts] The set of North-south hardening alerts
   * associated with the Azure resource
   * @property {date} [rulesCalculationTime] The UTC time on which the traffic
   * hardening rules were calculated
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of NorthSouthHardenings
   *
   * @returns {object} metadata of NorthSouthHardenings
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'NorthSouthHardenings',
      type: {
        name: 'Composite',
        className: 'NorthSouthHardenings',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          trafficHardeningRules: {
            required: false,
            serializedName: 'properties.trafficHardeningRules',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TrafficHardeningRuleElementType',
                  type: {
                    name: 'Composite',
                    className: 'TrafficHardeningRule'
                  }
              }
            }
          },
          trafficAlerts: {
            required: false,
            serializedName: 'properties.trafficAlerts',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TrafficAlertElementType',
                  type: {
                    name: 'Composite',
                    className: 'TrafficAlert'
                  }
              }
            }
          },
          rulesCalculationTime: {
            required: false,
            serializedName: 'properties.rulesCalculationTime',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = NorthSouthHardenings;
