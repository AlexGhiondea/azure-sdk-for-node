/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * A north-south traffic hardening rule
 *
 */
class TrafficHardeningRule {
  /**
   * Create a TrafficHardeningRule.
   * @property {string} [name] The name of the rule
   * @property {string} [direction] The rule;s traffic direction. Possible
   * values include: 'Inbound', 'Outbound'
   * @property {number} [destinationPort] The rule's destination port
   * @property {array} [protocols] The rule's transport protocol
   * @property {array} [allowRemoteAddresses] The remote addresses that should
   * be able to communicate with the Azure resource on the rule's destination
   * port and protocol
   */
  constructor() {
  }

  /**
   * Defines the metadata of TrafficHardeningRule
   *
   * @returns {object} metadata of TrafficHardeningRule
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TrafficHardeningRule',
      type: {
        name: 'Composite',
        className: 'TrafficHardeningRule',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          direction: {
            required: false,
            serializedName: 'direction',
            type: {
              name: 'String'
            }
          },
          destinationPort: {
            required: false,
            serializedName: 'destinationPort',
            type: {
              name: 'Number'
            }
          },
          protocols: {
            required: false,
            serializedName: 'protocols',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'NorthSouthProtocolElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          allowRemoteAddresses: {
            required: false,
            serializedName: 'allowRemoteAddresses',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = TrafficHardeningRule;
