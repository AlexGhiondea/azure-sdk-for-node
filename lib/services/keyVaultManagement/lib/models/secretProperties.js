/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Properties of the secret
 *
 */
class SecretProperties {
  /**
   * Create a SecretProperties.
   * @property {string} [value] The value of the secret. NOTE: 'value' will
   * never be returned from the service, as APIs using this model are is
   * intended for internal use in ARM deployments. Users should use the
   * data-plane REST service for interaction with vault secrets.
   * @property {string} [contentType] The content type of the secret.
   * @property {object} [attributes] The attributes of the secret.
   * @property {string} [secretUri] The URI to retrieve the current version of
   * the secret.
   * @property {string} [secretUriWithVersion] The URI to retrieve the specific
   * version of the secret.
   */
  constructor() {
  }

  /**
   * Defines the metadata of SecretProperties
   *
   * @returns {object} metadata of SecretProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SecretProperties',
      type: {
        name: 'Composite',
        className: 'SecretProperties',
        modelProperties: {
          value: {
            required: false,
            serializedName: 'value',
            type: {
              name: 'String'
            }
          },
          contentType: {
            required: false,
            serializedName: 'contentType',
            type: {
              name: 'String'
            }
          },
          attributes: {
            required: false,
            serializedName: 'attributes',
            type: {
              name: 'Composite',
              className: 'SecretAttributes'
            }
          },
          secretUri: {
            required: false,
            readOnly: true,
            serializedName: 'secretUri',
            type: {
              name: 'String'
            }
          },
          secretUriWithVersion: {
            required: false,
            readOnly: true,
            serializedName: 'secretUriWithVersion',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = SecretProperties;
