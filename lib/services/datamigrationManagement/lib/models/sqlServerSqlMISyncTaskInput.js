/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Input for task that migrates SQL Server databases to Azure SQL Database
 * Managed Instance online scenario.
 *
 */
class SqlServerSqlMISyncTaskInput {
  /**
   * Create a SqlServerSqlMISyncTaskInput.
   * @property {array} selectedDatabases Databases to migrate
   * @property {object} [backupFileShare] Backup file share information for all
   * selected databases.
   * @property {string} [backupFileShare.userName] User name credential to
   * connect to the share location
   * @property {string} [backupFileShare.password] Password credential used to
   * connect to the share location.
   * @property {string} [backupFileShare.path] The folder path for this share.
   * @property {string} storageResourceId Fully qualified resourceId of storage
   * @property {object} sourceConnectionInfo Connection information for source
   * SQL Server
   * @property {string} [sourceConnectionInfo.dataSource] Data source in the
   * format Protocol:MachineName\SQLServerInstanceName,PortNumber
   * @property {string} [sourceConnectionInfo.authentication] Authentication
   * type to use for connection. Possible values include: 'None',
   * 'WindowsAuthentication', 'SqlAuthentication', 'ActiveDirectoryIntegrated',
   * 'ActiveDirectoryPassword'
   * @property {boolean} [sourceConnectionInfo.encryptConnection] Whether to
   * encrypt the connection
   * @property {string} [sourceConnectionInfo.additionalSettings] Additional
   * connection settings
   * @property {boolean} [sourceConnectionInfo.trustServerCertificate] Whether
   * to trust the server certificate
   * @property {string} [sourceConnectionInfo.platform] Server platform type
   * for connection. Possible values include: 'SqlOnPrem'
   * @property {object} targetConnectionInfo Connection information for Azure
   * SQL Database Managed Instance
   * @property {string} [targetConnectionInfo.managedInstanceResourceId]
   * Resource id for Azure SQL database Managed instance
   * @property {object} azureApp Azure Active Directory Application the DMS
   * instance will use to connect to the target instance of Azure SQL Database
   * Managed Instance and the Azure Storage Account
   * @property {string} [azureApp.applicationId] Application ID of the Azure
   * Active Directory Application
   * @property {string} [azureApp.appKey] Key used to authenticate to the Azure
   * Active Directory Application
   * @property {string} [azureApp.tenantId] Tenant id of the customer
   */
  constructor() {
  }

  /**
   * Defines the metadata of SqlServerSqlMISyncTaskInput
   *
   * @returns {object} metadata of SqlServerSqlMISyncTaskInput
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SqlServerSqlMISyncTaskInput',
      type: {
        name: 'Composite',
        className: 'SqlServerSqlMISyncTaskInput',
        modelProperties: {
          selectedDatabases: {
            required: true,
            serializedName: 'selectedDatabases',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MigrateSqlServerSqlMIDatabaseInputElementType',
                  type: {
                    name: 'Composite',
                    className: 'MigrateSqlServerSqlMIDatabaseInput'
                  }
              }
            }
          },
          backupFileShare: {
            required: false,
            serializedName: 'backupFileShare',
            type: {
              name: 'Composite',
              className: 'FileShare'
            }
          },
          storageResourceId: {
            required: true,
            serializedName: 'storageResourceId',
            type: {
              name: 'String'
            }
          },
          sourceConnectionInfo: {
            required: true,
            serializedName: 'sourceConnectionInfo',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'type',
                clientName: 'type'
              },
              uberParent: 'ConnectionInfo',
              className: 'SqlConnectionInfo'
            }
          },
          targetConnectionInfo: {
            required: true,
            serializedName: 'targetConnectionInfo',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'type',
                clientName: 'type'
              },
              uberParent: 'ConnectionInfo',
              className: 'MiSqlConnectionInfo'
            }
          },
          azureApp: {
            required: true,
            serializedName: 'azureApp',
            type: {
              name: 'Composite',
              className: 'AzureActiveDirectoryApp'
            }
          }
        }
      }
    };
  }
}

module.exports = SqlServerSqlMISyncTaskInput;
