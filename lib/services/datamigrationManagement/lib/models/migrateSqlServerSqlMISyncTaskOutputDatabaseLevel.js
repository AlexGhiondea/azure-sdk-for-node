/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel.
 * @extends models['MigrateSqlServerSqlMISyncTaskOutput']
 */
class MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel extends models['MigrateSqlServerSqlMISyncTaskOutput'] {
  /**
   * Create a MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel.
   * @property {string} [sourceDatabaseName] Name of the database
   * @property {string} [migrationState] Current state of database. Possible
   * values include: 'UNDEFINED', 'INITIAL', 'FULL_BACKUP_UPLOAD_START',
   * 'LOG_SHIPPING_START', 'UPLOAD_LOG_FILES_START', 'CUTOVER_START',
   * 'POST_CUTOVER_COMPLETE', 'COMPLETED', 'CANCELLED', 'FAILED'
   * @property {date} [startedOn] Database migration start time
   * @property {date} [endedOn] Database migration end time
   * @property {object} [fullBackupSetInfo] Details of full backup set
   * @property {string} [fullBackupSetInfo.backupSetId] Id for the set of
   * backup files
   * @property {string} [fullBackupSetInfo.firstLsn] First log sequence number
   * of the backup file
   * @property {string} [fullBackupSetInfo.lastLsn] Last log sequence number of
   * the backup file
   * @property {date} [fullBackupSetInfo.lastModifiedTime] Last modified time
   * of the backup file in share location
   * @property {string} [fullBackupSetInfo.backupType] Enum of the different
   * backup types. Possible values include: 'Database', 'TransactionLog',
   * 'File', 'DifferentialDatabase', 'DifferentialFile', 'Partial',
   * 'DifferentialPartial'
   * @property {array} [fullBackupSetInfo.listOfBackupFiles] List of files in
   * the backup set
   * @property {string} [fullBackupSetInfo.databaseName] Name of the database
   * to which the backup set belongs
   * @property {date} [fullBackupSetInfo.backupStartDate] Date and time that
   * the backup operation began
   * @property {date} [fullBackupSetInfo.backupFinishedDate] Date and time that
   * the backup operation finished
   * @property {boolean} [fullBackupSetInfo.isBackupRestored] Whether the
   * backup set is restored or not
   * @property {object} [lastRestoredBackupSetInfo] Last applied backup set
   * information
   * @property {string} [lastRestoredBackupSetInfo.backupSetId] Id for the set
   * of backup files
   * @property {string} [lastRestoredBackupSetInfo.firstLsn] First log sequence
   * number of the backup file
   * @property {string} [lastRestoredBackupSetInfo.lastLsn] Last log sequence
   * number of the backup file
   * @property {date} [lastRestoredBackupSetInfo.lastModifiedTime] Last
   * modified time of the backup file in share location
   * @property {string} [lastRestoredBackupSetInfo.backupType] Enum of the
   * different backup types. Possible values include: 'Database',
   * 'TransactionLog', 'File', 'DifferentialDatabase', 'DifferentialFile',
   * 'Partial', 'DifferentialPartial'
   * @property {array} [lastRestoredBackupSetInfo.listOfBackupFiles] List of
   * files in the backup set
   * @property {string} [lastRestoredBackupSetInfo.databaseName] Name of the
   * database to which the backup set belongs
   * @property {date} [lastRestoredBackupSetInfo.backupStartDate] Date and time
   * that the backup operation began
   * @property {date} [lastRestoredBackupSetInfo.backupFinishedDate] Date and
   * time that the backup operation finished
   * @property {boolean} [lastRestoredBackupSetInfo.isBackupRestored] Whether
   * the backup set is restored or not
   * @property {array} [activeBackupSets] Backup sets that are currently active
   * (Either being uploaded or getting restored)
   * @property {string} [containerName] Name of container created in the Azure
   * Storage account where backups are copied to
   * @property {string} [errorPrefix] prefix string to use for querying errors
   * for this database
   * @property {boolean} [isFullBackupRestored] Whether full backup has been
   * applied to the target database or not
   * @property {array} [exceptionsAndWarnings] Migration exceptions and
   * warnings
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel
   *
   * @returns {object} metadata of MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DatabaseLevelOutput',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'resultType',
          clientName: 'resultType'
        },
        uberParent: 'MigrateSqlServerSqlMISyncTaskOutput',
        className: 'MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          resultType: {
            required: true,
            serializedName: 'resultType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          sourceDatabaseName: {
            required: false,
            readOnly: true,
            serializedName: 'sourceDatabaseName',
            type: {
              name: 'String'
            }
          },
          migrationState: {
            required: false,
            readOnly: true,
            serializedName: 'migrationState',
            type: {
              name: 'String'
            }
          },
          startedOn: {
            required: false,
            readOnly: true,
            serializedName: 'startedOn',
            type: {
              name: 'DateTime'
            }
          },
          endedOn: {
            required: false,
            readOnly: true,
            serializedName: 'endedOn',
            type: {
              name: 'DateTime'
            }
          },
          fullBackupSetInfo: {
            required: false,
            readOnly: true,
            serializedName: 'fullBackupSetInfo',
            type: {
              name: 'Composite',
              className: 'BackupSetInfo'
            }
          },
          lastRestoredBackupSetInfo: {
            required: false,
            readOnly: true,
            serializedName: 'lastRestoredBackupSetInfo',
            type: {
              name: 'Composite',
              className: 'BackupSetInfo'
            }
          },
          activeBackupSets: {
            required: false,
            readOnly: true,
            serializedName: 'activeBackupSets',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'BackupSetInfoElementType',
                  type: {
                    name: 'Composite',
                    className: 'BackupSetInfo'
                  }
              }
            }
          },
          containerName: {
            required: false,
            readOnly: true,
            serializedName: 'containerName',
            type: {
              name: 'String'
            }
          },
          errorPrefix: {
            required: false,
            readOnly: true,
            serializedName: 'errorPrefix',
            type: {
              name: 'String'
            }
          },
          isFullBackupRestored: {
            required: false,
            readOnly: true,
            serializedName: 'isFullBackupRestored',
            type: {
              name: 'Boolean'
            }
          },
          exceptionsAndWarnings: {
            required: false,
            readOnly: true,
            serializedName: 'exceptionsAndWarnings',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ReportableExceptionElementType',
                  type: {
                    name: 'Composite',
                    className: 'ReportableException'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel;
