/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Information of backup set
 *
 */
class BackupSetInfo {
  /**
   * Create a BackupSetInfo.
   * @property {string} [backupSetId] Id for the set of backup files
   * @property {string} [firstLsn] First log sequence number of the backup file
   * @property {string} [lastLsn] Last log sequence number of the backup file
   * @property {date} [lastModifiedTime] Last modified time of the backup file
   * in share location
   * @property {string} [backupType] Enum of the different backup types.
   * Possible values include: 'Database', 'TransactionLog', 'File',
   * 'DifferentialDatabase', 'DifferentialFile', 'Partial',
   * 'DifferentialPartial'
   * @property {array} [listOfBackupFiles] List of files in the backup set
   * @property {string} [databaseName] Name of the database to which the backup
   * set belongs
   * @property {date} [backupStartDate] Date and time that the backup operation
   * began
   * @property {date} [backupFinishedDate] Date and time that the backup
   * operation finished
   * @property {boolean} [isBackupRestored] Whether the backup set is restored
   * or not
   */
  constructor() {
  }

  /**
   * Defines the metadata of BackupSetInfo
   *
   * @returns {object} metadata of BackupSetInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'BackupSetInfo',
      type: {
        name: 'Composite',
        className: 'BackupSetInfo',
        modelProperties: {
          backupSetId: {
            required: false,
            serializedName: 'backupSetId',
            type: {
              name: 'String'
            }
          },
          firstLsn: {
            required: false,
            serializedName: 'firstLsn',
            type: {
              name: 'String'
            }
          },
          lastLsn: {
            required: false,
            serializedName: 'lastLsn',
            type: {
              name: 'String'
            }
          },
          lastModifiedTime: {
            required: false,
            serializedName: 'lastModifiedTime',
            type: {
              name: 'DateTime'
            }
          },
          backupType: {
            required: false,
            serializedName: 'backupType',
            type: {
              name: 'String'
            }
          },
          listOfBackupFiles: {
            required: false,
            serializedName: 'listOfBackupFiles',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'BackupFileInfoElementType',
                  type: {
                    name: 'Composite',
                    className: 'BackupFileInfo'
                  }
              }
            }
          },
          databaseName: {
            required: false,
            serializedName: 'databaseName',
            type: {
              name: 'String'
            }
          },
          backupStartDate: {
            required: false,
            serializedName: 'backupStartDate',
            type: {
              name: 'DateTime'
            }
          },
          backupFinishedDate: {
            required: false,
            serializedName: 'backupFinishedDate',
            type: {
              name: 'DateTime'
            }
          },
          isBackupRestored: {
            required: false,
            serializedName: 'isBackupRestored',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = BackupSetInfo;
