/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * A disptch connected service.
 *
 */
class DispatchConnectedServiceObject {
  /**
   * Create a DispatchConnectedServiceObject.
   * @property {string} [intentName] The name of the intent connected to the
   * dispatch
   * @property {string} [type] The type of the connected service [luis/qna]
   * @property {string} [name] The name of the connected LUIS app (only if type
   * is luis)
   * @property {uuid} [appId] The ID of the connected LUIS app (only if type is
   * luis)
   * @property {string} [version] The version ID of the connected LUIS app
   * (only if type is luis)
   * @property {string} [region] The region of the connected LUIS app (only if
   * type is luis)
   * @property {uuid} [kbId] The ID of the connected QnA app (only if type is
   * qna)
   */
  constructor() {
  }

  /**
   * Defines the metadata of DispatchConnectedServiceObject
   *
   * @returns {object} metadata of DispatchConnectedServiceObject
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DispatchConnectedServiceObject',
      type: {
        name: 'Composite',
        className: 'DispatchConnectedServiceObject',
        modelProperties: {
          intentName: {
            required: false,
            serializedName: 'intentName',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          appId: {
            required: false,
            serializedName: 'appId',
            type: {
              name: 'String'
            }
          },
          version: {
            required: false,
            serializedName: 'version',
            type: {
              name: 'String'
            }
          },
          region: {
            required: false,
            serializedName: 'region',
            type: {
              name: 'String'
            }
          },
          kbId: {
            required: false,
            serializedName: 'kbId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = DispatchConnectedServiceObject;
