/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Describes the properties of a VM size.
 *
 */
class VirtualMachineSize {
  /**
   * Create a VirtualMachineSize.
   * @member {string} [name] Virtual Machine size name. The name of the virtual
   * machine size.
   * @member {string} [family] Virtual Machine family name. The family name of
   * the virtual machine size.
   * @member {number} [vCPUs] Number of vPUs. The number of vCPUs supported by
   * the virtual machine size.
   * @member {number} [osVhdSizeMB] OS VHD Disk size. The OS VHD disk size, in
   * MB, allowed by the virtual machine size.
   * @member {number} [maxResourceVolumeMB] Resource volume size. The resource
   * volume size, in MB, allowed by the virtual machine size.
   * @member {number} [memoryGB] Memory size. The amount of memory, in GB,
   * supported by the virtual machine size.
   * @member {boolean} [lowPriorityCapable] Low priority capable. Specifies if
   * the virtual machine size supports low priority VMs.
   * @member {boolean} [premiumIO] Premium IO supported. Specifies if the
   * virtual machine size supports premium IO.
   */
  constructor() {
  }

  /**
   * Defines the metadata of VirtualMachineSize
   *
   * @returns {object} metadata of VirtualMachineSize
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VirtualMachineSize',
      type: {
        name: 'Composite',
        className: 'VirtualMachineSize',
        modelProperties: {
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          family: {
            required: false,
            readOnly: true,
            serializedName: 'family',
            type: {
              name: 'String'
            }
          },
          vCPUs: {
            required: false,
            readOnly: true,
            serializedName: 'vCPUs',
            type: {
              name: 'Number'
            }
          },
          osVhdSizeMB: {
            required: false,
            readOnly: true,
            serializedName: 'osVhdSizeMB',
            type: {
              name: 'Number'
            }
          },
          maxResourceVolumeMB: {
            required: false,
            readOnly: true,
            serializedName: 'maxResourceVolumeMB',
            type: {
              name: 'Number'
            }
          },
          memoryGB: {
            required: false,
            readOnly: true,
            serializedName: 'memoryGB',
            type: {
              name: 'Number'
            }
          },
          lowPriorityCapable: {
            required: false,
            readOnly: true,
            serializedName: 'lowPriorityCapable',
            type: {
              name: 'Boolean'
            }
          },
          premiumIO: {
            required: false,
            readOnly: true,
            serializedName: 'premiumIO',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = VirtualMachineSize;
